<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.power.ssm.dao.FaultDao">

    <resultMap id="BaseResultMap" type="com.power.ssm.model.Fault">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="locationId" jdbcType="INTEGER" property="locationId" />
        <result column="typeId" jdbcType="INTEGER" property="typeId" />
        <result column="reasonId" jdbcType="INTEGER" property="reasonId" />
        <result column="station" jdbcType="VARCHAR" property="station" />
        <result column="line" jdbcType="VARCHAR" property="line" />
        <result column="voltage" jdbcType="VARCHAR" property="voltage" />
        <result column="position" jdbcType="VARCHAR" property="position" />
        <result column="model" jdbcType="VARCHAR" property="model" />
        <result column="factory" jdbcType="VARCHAR" property="factory" />
        <result column="description" jdbcType="VARCHAR" property="description" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <association property="location" column="locationId" select="com.power.ssm.dao.FaultLocationDao.select"/>
        <association property="reason" column="reasonId" select="com.power.ssm.dao.FaultReasonDao.select"/>
        <association property="type" column="typeId" select="com.power.ssm.dao.FaultTypeDao.select"/>
    </resultMap>

    <select id="starQuery" resultMap="BaseResultMap" parameterType="com.power.ssm.model.StarQuery">
        SELECT * from fault  WHERE line in (
        (select * from (
        select line from fault WHERE faultDate BETWEEN '2013-01-01' AND  '2014-12-31' GROUP BY line HAVING count(*) = #{firstState}
        union all
        select line from fault WHERE faultDate BETWEEN '2015-01-01' AND  '2016-12-31' GROUP BY line HAVING count(*) = #{secondState}
        union all
        select line from fault WHERE faultDate BETWEEN '2017-01-01' AND  '2018-12-31' GROUP BY line HAVING count(*) = #{thirdState}
        ) fault GROUP BY line HAVING count(*) = 3)) GROUP BY line;
    </select>


    <select id="query" resultMap="BaseResultMap" parameterType="com.power.ssm.model.Fault">
        select * from `fault` where `id` > 0
        <if test="typeId != null">
            and typeId = #{typeId}
        </if>
        <if test="locationId != null">
            and locationId = #{locationId}
        </if>
        <if test="reasonId != null">
            and reasonId = #{reasonId}
        </if>
        <if test="pageFlag != null and pageFlag > 0">
            limit #{start}, #{pageSize}
        </if>
        ;
        <!--        <choose>-->
<!--            <when test="updatedAtSort == 'desc'">-->
<!--                order by `updatedAt` desc-->
<!--            </when>-->
<!--            <otherwise>-->
<!--                order by `updatedAt` asc-->
<!--            </otherwise>-->
<!--        </choose>-->
        ;
    </select>


    <select id="count" parameterType="com.power.ssm.model.Fault" resultType="java.lang.Integer">
        select count(*) from `fault` where `id` > 0
        <if test="typeId != null">
            and typeId = #{typeId}
        </if>
        <if test="locationId != null">
            and locationId = #{locationId}
        </if>
        <if test="reasonId != null">
            and reasonId = #{reasonId}
        </if>
    </select>


    <select id="select" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select * from `fault`
        where id = #{pk, jdbcType=INTEGER}
    </select>

    <insert id="insert" parameterType="com.power.ssm.model.Fault">
        insert into `fault` (locationId, `typeId`, `reasonId`, `station`, `line`, `voltage`,
        `position`,`model`,`factory`,`productionDate`,`inOpen`,`inClose`,`outOpen`,`outClose`,`faultDate`,`description`,`remark`)
        values (
            #{locationId,jdbcType=INTEGER},
            #{typeId,jdbcType=INTEGER},
            #{reasonId,jdbcType=INTEGER},
            #{station,jdbcType=VARCHAR},
            #{line,jdbcType=VARCHAR},
            #{voltage,jdbcType=VARCHAR},
            #{position,jdbcType=VARCHAR},
            #{model,jdbcType=VARCHAR},
            #{factory,jdbcType=VARCHAR},
            #{productionDate,jdbcType=DATE},
            #{inOpen,jdbcType=VARCHAR},
            #{inClose,jdbcType=VARCHAR},
            #{outOpen,jdbcType=VARCHAR},
            #{outClose,jdbcType=VARCHAR},
            #{faultDate,jdbcType=DATE},
            #{description,jdbcType=VARCHAR},
            #{remark,jdbcType=VARCHAR}
        )
    </insert>

    <insert id="insertList" parameterType="java.util.List" >
        insert into `fault` (locationId, `typeId`, `reasonId`, `station`, `line`, `voltage`,
        `position`,`model`,`factory`,`productionDate`,`inOpen`,`inClose`,`outOpen`,`outClose`,`faultDate`,`description`,`remark`)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (
                #{item.locationId,jdbcType=INTEGER},
                #{item.typeId,jdbcType=INTEGER},
                #{item.reasonId,jdbcType=INTEGER},
                #{item.station,jdbcType=VARCHAR},
                #{item.line,jdbcType=VARCHAR},
                #{item.voltage,jdbcType=VARCHAR},
                #{item.position,jdbcType=VARCHAR},
                #{item.model,jdbcType=VARCHAR},
                #{item.factory,jdbcType=VARCHAR},
                #{item.productionDate,jdbcType=DATE},
                #{item.inOpen,jdbcType=VARCHAR},
                #{item.inClose,jdbcType=VARCHAR},
                #{item.outOpen,jdbcType=VARCHAR},
                #{item.outClose,jdbcType=VARCHAR},
                #{item.faultDate,jdbcType=DATE},
                #{item.description,jdbcType=VARCHAR},
                #{item.remark,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <update id="update" parameterType="com.power.ssm.model.Fault">
        update `fault`
        set
            locationId = #{locationId,jdbcType=INTEGER},
            typeId = #{typeId,jdbcType=INTEGER},
            reasonId = #{reasonId,jdbcType=INTEGER},
            station = #{station,jdbcType=VARCHAR},
            line = #{line,jdbcType=VARCHAR},
            voltage = #{voltage,jdbcType=VARCHAR},
            `position` = #{position,jdbcType=VARCHAR},
            model = #{model,jdbcType=VARCHAR},
            factory = #{factory,jdbcType=VARCHAR},
            productionDate = #{productionDate,jdbcType=DATE},
            inOpen = #{inOpen,jdbcType=VARCHAR},
            inClose = #{inClose,jdbcType=VARCHAR},
            outOpen = #{outOpen,jdbcType=VARCHAR},
            outClose = #{outClose,jdbcType=VARCHAR},
            faultDate = #{faultDate,jdbcType=DATE},
            description = #{description,jdbcType=VARCHAR},
            remark = #{remark,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <delete id="delete" parameterType="java.lang.Integer" >
        SET foreign_key_checks = 0;
        delete from `fault` where id = #{id,jdbcType=INTEGER};
        SET foreign_key_checks = 1;
    </delete>
</mapper>